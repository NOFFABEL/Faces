arguments: src/align_dataset_mtcnn.py PERSONS PERSONS_ALIGNED
--------------------
tensorflow version: 1.9.0
--------------------
git hash: b'096ed770f163957c1e56efa7feeb194773920f6e'
--------------------
b'diff --git a/src/train_softmax.py b/src/train_softmax.py\nindex 6b0b28b..7d51d41 100644\n--- a/src/train_softmax.py\n+++ b/src/train_softmax.py\n@@ -27,6 +27,7 @@ from __future__ import division\n from __future__ import print_function\n \n from datetime import datetime\n+import six\n import os.path\n import time\n import sys\n@@ -257,7 +258,7 @@ def main(args):\n \n                 print(\'Saving statistics\')\n                 with h5py.File(stat_file_name, \'w\') as f:\n-                    for key, value in stat.iteritems():\n+                    for key, value in stat.items():\n                         f.create_dataset(key, data=value)\n     \n     return model_dir\n@@ -494,13 +495,13 @@ def parse_arguments(argv):\n     parser.add_argument(\'--model_def\', type=str,\n         help=\'Model definition. Points to a module containing the definition of the inference graph.\', default=\'models.inception_resnet_v1\')\n     parser.add_argument(\'--max_nrof_epochs\', type=int,\n-        help=\'Number of epochs to run.\', default=500)\n+        help=\'Number of epochs to run.\', default=10)\n     parser.add_argument(\'--batch_size\', type=int,\n         help=\'Number of images to process in a batch.\', default=90)\n     parser.add_argument(\'--image_size\', type=int,\n         help=\'Image size (height, width) in pixels.\', default=160)\n     parser.add_argument(\'--epoch_size\', type=int,\n-        help=\'Number of batches per epoch.\', default=1000)\n+        help=\'Number of batches per epoch.\', default=100)\n     parser.add_argument(\'--embedding_size\', type=int,\n         help=\'Dimensionality of the embedding.\', default=128)\n     parser.add_argument(\'--random_crop\', \n@@ -527,12 +528,12 @@ def parse_arguments(argv):\n     parser.add_argument(\'--prelogits_hist_max\', type=float,\n         help=\'The max value for the prelogits histogram.\', default=10.0)\n     parser.add_argument(\'--optimizer\', type=str, choices=[\'ADAGRAD\', \'ADADELTA\', \'ADAM\', \'RMSPROP\', \'MOM\'],\n-        help=\'The optimization algorithm to use\', default=\'ADAGRAD\')\n+        help=\'The optimization algorithm to use\', default=\'ADAM\')\n     parser.add_argument(\'--learning_rate\', type=float,\n         help=\'Initial learning rate. If set to a negative value a learning rate \' +\n         \'schedule can be specified in the file "learning_rate_schedule.txt"\', default=0.1)\n     parser.add_argument(\'--learning_rate_decay_epochs\', type=int,\n-        help=\'Number of epochs between learning rate decay.\', default=100)\n+        help=\'Number of epochs between learning rate decay.\', default=20)\n     parser.add_argument(\'--learning_rate_decay_factor\', type=float,\n         help=\'Learning rate decay factor.\', default=1.0)\n     parser.add_argument(\'--moving_average_decay\', type=float,'